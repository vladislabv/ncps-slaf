Weekday = wday(Datetime, label = TRUE),
Date = as.Date(Datetime),
Year = as.factor(year(Datetime)),
Week = as.factor(week(Datetime)),
Hour = as.factor(hour(Datetime)),
Month = as.factor(month(Datetime)),
) |>
left_join(us_holidays, by = c("Date" = "date")) |>
mutate(
WorkDay = !(Date %in% us_holidays$date | Weekday %in% c("Sa", "So")),
Mo = Weekday == "Mo",
Di = Weekday == "Di",
Mi = Weekday == "Mi",
Do = Weekday == "Do",
Fr = Weekday == "Fr",
Sa = Weekday == "Sa",
So = Weekday == "So",
Holiday = (Date %in% us_holidays$date),
LastDayWasNotWorkDay = !lag(WorkDay, n=24),
LastDayWasNotWorkDayAndNowWorkDay = (LastDayWasNotWorkDay & WorkDay),
NextDayIsNotWorkDayAndNowWorkDay= (WorkDay & !lead(WorkDay, n=24)),
LastDayWasHolodiayAndNotWeekend = lag(Holiday, n=24) & !Sa & !So,
NextDayIsHolidayAndNotWeekend = lead(Holiday, n=24) & !lead(Sa, n=24) & !lead(So, n=24),
HolidayName = ifelse(is.na(localName), "Regulärer Tag", localName)
)
AEP_hourly_cleaned |>
gg_tsdisplay(AEP_MW, plot_type="partial", lag=36)
local_name_colors <- c(
"New Year's Day" = palette()[2],
"Martin Luther King, Jr. Day" = palette()[2],
"Washington's Birthday" = palette()[2],
"Memorial Day" = palette()[2],
"Independence Day" = palette()[2],
"Labour Day" = palette()[2],
"Veterans Day" = palette()[2],
"Thanksgiving Day" = palette()[2],
"Christmas Day" = palette()[2],
"Regulärer Tag" = palette()[1]
)
week_colors <- c(
"Mo" = palette()[1],
"Di" = palette()[1],
"Mi" = palette()[1],
"Do" = palette()[1],
"Fr" = palette()[1],
"Sa" = palette()[2],
"So" = palette()[2]
)
working_colors <- c("TRUE" = palette()[1], "FALSE" = palette()[2])
plot_histogram_by_group(
AEP_hourly_cleaned,
group_name = "WorkDay",
file_name = "plots\\workday_histogram.png",
colors = working_colors,
x="AEP_MW",
x_label = "Stromverbrauch [MW]",
y_label = "Häufigkeit"
)
plot_by_group(
AEP_hourly_cleaned,
group_name = "HolidayName",
file_name = "plots\\holiday_boxplot.png",
colors = local_name_colors,
title = "Übersicht der einzelnen Feiertage",
y="AEP_MW",
y_label="Stromverbrauch [MW]",
x_label="Jahre"
)
plot_by_group(
AEP_hourly_cleaned,
group_name = "Weekday",
file_name = "plots\\weekday_boxplot.png",
colors = week_colors,
title = "Übersicht der einzelnen Wochentage",
y = "AEP_MW",
y_label="Stromverbrauch [MW]",
x_label="Jahre"
)
plot_by_group(
AEP_hourly_cleaned,
group_name = "WorkDay",
file_name = "plots\\workday_boxplot.png",
colors = working_colors,
title = "Übersicht, ob Feiertag (FALSE) oder Werktag (TRUE)",
y = "AEP_MW",
y_label="Stromverbrauch [MW]",
x_label="Jahre"
)
plot_by_column(
df = AEP_hourly_cleaned,
x = "Hour",
y = "AEP_MW",
x_label = "Stunden",
y_label = "Stromverbrauch [MW]",
file_name = "plots\\hour_boxplot.png",
title = "Übersicht der einzelnen Stunden",
line=FALSE
)
plot_by_column(
df = AEP_hourly_cleaned,
x = "Month",
y = "AEP_MW",
x_label = "Monate",
y_label = "Stromverbrauch [MW]",
file_name = "plots\\month_boxplot.png",
title = "Übersicht der einzelnen Monate",
line=FALSE
)
plot_by_column(
df = AEP_hourly_cleaned,
x = "Week",
y = "AEP_MW",
x_label = "Woche",
y_label = "Stromverbrauch [MW]",
file_name = "plots\\week_boxplot.png",
title = "Übersicht der einzelnen Wochen",
line=FALSE
)
plot_by_column(
df = AEP_hourly_cleaned,
x = "Year",
y = "AEP_MW",
x_label = "Jahr",
y_label = "Stromverbrauch [MW]",
file_name = "plots\\year_boxplot.png",
title = "Übersicht der einzelnen Jahre",
line=FALSE
)
plot_year_month_week_day(
df=AEP_hourly_cleaned,
date_column="Datetime",
y="AEP_MW",
from_year=2005,
to_year=2018,
from_week=0,
to_week=52,
year_for_week=2015,
from_day=1,
to_day=30,
month_for_day=4,
year_for_day=2015,
from_month=1,
to_month=12,
year_for_month=2015,
holiday="Holiday",
day_of_week = "Weekday"
)
AEP_hourly_cleaned$MeanLastWeek <- rollapply(AEP_hourly_cleaned$AEP_MW, width = 24*7, FUN = function(x) mean(x[1:(24*7-1)]), align = "right", fill = NA)
AEP_hourly_cleaned$MeanLastTwoDays <- rollapply(AEP_hourly_cleaned$AEP_MW, width = 24*2, FUN = function(x) mean(x[1:(24*2-1)]), align = "right", fill = NA)
AEP_hourly_cleaned$MaxLastOneDay <- rollapply(AEP_hourly_cleaned$AEP_MW, width = 24*1, FUN = function(x) max(x[1:(24*1-1)]), align = "right", fill = NA)
AEP_hourly_cleaned$MinLastOneDay <- rollapply(AEP_hourly_cleaned$AEP_MW, width = 24*1, FUN = function(x) min(x[1:(24*1-1)]), align = "right", fill = NA)
cor <- cor(AEP_hourly_cleaned[sapply(AEP_hourly_cleaned, is.numeric)], method = c("pearson", "kendall", "spearman"), use = "complete.obs")
plot_by_column(
df = AEP_hourly_cleaned,
x = "MeanLastWeek",
y = "AEP_MW",
x_label = "Jahr",
y_label = "Stromverbrauch [MW]",
file_name = "plots\\mean_last_week.png",
title = " ",
line=TRUE
)
plot_by_column(
df = AEP_hourly_cleaned,
x = "MeanLastTwoDays",
y = "AEP_MW",
x_label = "Jahr",
y_label = "Stromverbrauch [MW]",
file_name = "plots\\mean_last_two_days.png",
title = " ",
line=TRUE
)
plot_by_column(
df = AEP_hourly_cleaned,
x = "MeanLastWeek",
y = "AEP_MW",
x_label = "MeanLastWeek",
y_label = "Stromverbrauch [MW]",
file_name = "plots\\mean_last_week.png",
title = " ",
line=TRUE
)
plot_by_column(
df = AEP_hourly_cleaned,
x = "MeanLastTwoDays",
y = "AEP_MW",
x_label = "MeanLastTwoDays",
y_label = "Stromverbrauch [MW]",
file_name = "plots\\mean_last_two_days.png",
title = " ",
line=TRUE
)
plot_by_column(
df = AEP_hourly_cleaned,
x = "MaxLastOneDay",
y = "AEP_MW",
x_label = "MaxLastOneDay",
y_label = "Stromverbrauch [MW]",
file_name = "plots\\max_last_one_day.png",
title = " ",
line=TRUE
)
plot_by_column(
df = AEP_hourly_cleaned,
x = "MinLastOneDay",
y = "AEP_MW",
x_label = "MinLastOneDay",
y_label = "Stromverbrauch [MW]",
file_name = "plots\\min_last_one_day.png",
title = " ",
line=TRUE
)
# Load Packages
library(fhswf)
library(ggplot2)
library(tsibbledata) #0.4.1
library(dplyr)
library(tsibble)
library(fable)
library(fabletools)
library(feasts)
library(distributional)
library(lubridate)
library(broom)
library(readr)
library(tidyr)
library(datasets)
library(forecast)
library(timeDate)
library(qlcal)
library(devtools)
library(zoo)
library(corrplot)
library(scales)
load_all()
# Load german holidays from 2015 to 2024
us_holidays <- load_german_holidays(from_year = 2004, to_year = 2018, location="/US")
us_holidays <- us_holidays |>
mutate(date = as.Date(date)) |>
select(localName, date)
# For the company https://en.wikipedia.org/wiki/American_Electric_Power
# estimated energy consumption in Megawatts (MW)
AEP_hourly <- read.csv("data\\AEP_hourly.csv")
AEP_hourly$Datetime <- as.POSIXct(AEP_hourly$Datetime,
format = "%Y-%m-%d %H:%M:%S")
AEP_hourly <- AEP_hourly |>
mutate(
MissingValue = (difftime(Datetime, lag(Datetime, default = first(Datetime)), units = "hours") == 2) | is.na(AEP_MW) | is.na(Datetime),
DuplicatedDate = duplicated(Datetime),
Year = year(Datetime)) |>
distinct(Datetime, .keep_all = TRUE)
plot_raw_data(
AEP_hourly,
x = "Datetime",
y = "AEP_MW",
color = "DuplicatedDate",
missing_value = "MissingValue",
file_name = "plots\\raw_AEP_MW.png"
)
AEP_hourly_cleaned <- AEP_hourly |>
drop_na(Datetime) |>
as_tsibble(index = Datetime) |>
select(Datetime, AEP_MW) |>
fill_gaps() |>
fill(AEP_MW, .direction = "downup") |>
mutate(
Weekday = wday(Datetime, label = TRUE),
Date = as.Date(Datetime),
Year = as.factor(year(Datetime)),
Week = as.factor(week(Datetime)),
Hour = as.factor(hour(Datetime)),
Month = as.factor(month(Datetime)),
) |>
left_join(us_holidays, by = c("Date" = "date")) |>
mutate(
WorkDay = !(Date %in% us_holidays$date | Weekday %in% c("Sa", "So")),
Mo = Weekday == "Mo",
Di = Weekday == "Di",
Mi = Weekday == "Mi",
Do = Weekday == "Do",
Fr = Weekday == "Fr",
Sa = Weekday == "Sa",
So = Weekday == "So",
Holiday = (Date %in% us_holidays$date),
LastDayWasNotWorkDay = !lag(WorkDay, n=24),
LastDayWasNotWorkDayAndNowWorkDay = (LastDayWasNotWorkDay & WorkDay),
NextDayIsNotWorkDayAndNowWorkDay= (WorkDay & !lead(WorkDay, n=24)),
LastDayWasHolodiayAndNotWeekend = lag(Holiday, n=24) & !Sa & !So,
NextDayIsHolidayAndNotWeekend = lead(Holiday, n=24) & !lead(Sa, n=24) & !lead(So, n=24),
HolidayName = ifelse(is.na(localName), "Regulärer Tag", localName)
)
AEP_hourly_cleaned |>
gg_tsdisplay(AEP_MW, plot_type="partial", lag=36)
local_name_colors <- c(
"New Year's Day" = palette()[2],
"Martin Luther King, Jr. Day" = palette()[2],
"Washington's Birthday" = palette()[2],
"Memorial Day" = palette()[2],
"Independence Day" = palette()[2],
"Labour Day" = palette()[2],
"Veterans Day" = palette()[2],
"Thanksgiving Day" = palette()[2],
"Christmas Day" = palette()[2],
"Regulärer Tag" = palette()[1]
)
week_colors <- c(
"Mo" = palette()[1],
"Di" = palette()[1],
"Mi" = palette()[1],
"Do" = palette()[1],
"Fr" = palette()[1],
"Sa" = palette()[2],
"So" = palette()[2]
)
working_colors <- c("TRUE" = palette()[1], "FALSE" = palette()[2])
plot_histogram_by_group(
AEP_hourly_cleaned,
group_name = "WorkDay",
file_name = "plots\\workday_histogram.png",
colors = working_colors,
x="AEP_MW",
x_label = "Stromverbrauch [MW]",
y_label = "Häufigkeit"
)
plot_by_group(
AEP_hourly_cleaned,
group_name = "HolidayName",
file_name = "plots\\holiday_boxplot.png",
colors = local_name_colors,
title = "Übersicht der einzelnen Feiertage",
y="AEP_MW",
y_label="Stromverbrauch [MW]",
x_label="Jahre"
)
plot_by_group(
AEP_hourly_cleaned,
group_name = "Weekday",
file_name = "plots\\weekday_boxplot.png",
colors = week_colors,
title = "Übersicht der einzelnen Wochentage",
y = "AEP_MW",
y_label="Stromverbrauch [MW]",
x_label="Jahre"
)
plot_by_group(
AEP_hourly_cleaned,
group_name = "WorkDay",
file_name = "plots\\workday_boxplot.png",
colors = working_colors,
title = "Übersicht, ob Feiertag (FALSE) oder Werktag (TRUE)",
y = "AEP_MW",
y_label="Stromverbrauch [MW]",
x_label="Jahre"
)
plot_by_column(
df = AEP_hourly_cleaned,
x = "Hour",
y = "AEP_MW",
x_label = "Stunden",
y_label = "Stromverbrauch [MW]",
file_name = "plots\\hour_boxplot.png",
title = "Übersicht der einzelnen Stunden",
line=FALSE
)
plot_by_column(
df = AEP_hourly_cleaned,
x = "Month",
y = "AEP_MW",
x_label = "Monate",
y_label = "Stromverbrauch [MW]",
file_name = "plots\\month_boxplot.png",
title = "Übersicht der einzelnen Monate",
line=FALSE
)
plot_by_column(
df = AEP_hourly_cleaned,
x = "Week",
y = "AEP_MW",
x_label = "Woche",
y_label = "Stromverbrauch [MW]",
file_name = "plots\\week_boxplot.png",
title = "Übersicht der einzelnen Wochen",
line=FALSE
)
plot_by_column(
df = AEP_hourly_cleaned,
x = "Year",
y = "AEP_MW",
x_label = "Jahr",
y_label = "Stromverbrauch [MW]",
file_name = "plots\\year_boxplot.png",
title = "Übersicht der einzelnen Jahre",
line=FALSE
)
plot_year_month_week_day(
df=AEP_hourly_cleaned,
date_column="Datetime",
y="AEP_MW",
from_year=2005,
to_year=2018,
from_week=0,
to_week=52,
year_for_week=2015,
from_day=1,
to_day=30,
month_for_day=4,
year_for_day=2015,
from_month=1,
to_month=12,
year_for_month=2015,
holiday="Holiday",
day_of_week = "Weekday"
)
AEP_hourly_cleaned$MeanLastWeek <- rollapply(AEP_hourly_cleaned$AEP_MW, width = 24*7, FUN = function(x) mean(x[1:(24*7-1)]), align = "right", fill = NA)
AEP_hourly_cleaned$MeanLastTwoDays <- rollapply(AEP_hourly_cleaned$AEP_MW, width = 24*2, FUN = function(x) mean(x[1:(24*2-1)]), align = "right", fill = NA)
AEP_hourly_cleaned$MaxLastOneDay <- rollapply(AEP_hourly_cleaned$AEP_MW, width = 24*1, FUN = function(x) max(x[1:(24*1-1)]), align = "right", fill = NA)
AEP_hourly_cleaned$MinLastOneDay <- rollapply(AEP_hourly_cleaned$AEP_MW, width = 24*1, FUN = function(x) min(x[1:(24*1-1)]), align = "right", fill = NA)
cor <- cor(AEP_hourly_cleaned[sapply(AEP_hourly_cleaned, is.numeric)], method = c("pearson", "kendall", "spearman"), use = "complete.obs")
plot_by_column(
df = AEP_hourly_cleaned,
x = "MeanLastWeek",
y = "AEP_MW",
x_label = "MeanLastWeek",
y_label = "Stromverbrauch [MW]",
file_name = "plots\\mean_last_week.png",
title = " ",
line=TRUE
)
plot_by_column(
df = AEP_hourly_cleaned,
x = "MeanLastTwoDays",
y = "AEP_MW",
x_label = "MeanLastTwoDays",
y_label = "Stromverbrauch [MW]",
file_name = "plots\\mean_last_two_days.png",
title = " ",
line=TRUE
)
plot_by_column(
df = AEP_hourly_cleaned,
x = "MaxLastOneDay",
y = "AEP_MW",
x_label = "MaxLastOneDay",
y_label = "Stromverbrauch [MW]",
file_name = "plots\\max_last_one_day.png",
title = " ",
line=TRUE
)
plot_by_column(
df = AEP_hourly_cleaned,
x = "MinLastOneDay",
y = "AEP_MW",
x_label = "MinLastOneDay",
y_label = "Stromverbrauch [MW]",
file_name = "plots\\min_last_one_day.png",
title = " ",
line=TRUE
)
View(cor)
plot_raw_data(
AEP_hourly_cleaned,
x = "Datetime",
y = "AEP_MW",
color = "DuplicatedDate",
missing_value = "MissingValue",
file_name = "plots\\cleaned_AEP_MW.png"
)
# Load Packages
library(fhswf)
library(ggplot2)
library(tsibbledata) #0.4.1
library(dplyr)
library(tsibble)
library(fable)
library(fabletools)
library(feasts)
library(distributional)
library(lubridate)
library(broom)
library(readr)
library(tidyr)
library(datasets)
library(forecast)
library(timeDate)
library(qlcal)
library(devtools)
library(zoo)
library(corrplot)
library(scales)
load_all()
# Load german holidays from 2015 to 2024
us_holidays <- load_german_holidays(from_year = 2004, to_year = 2018, location="/US")
us_holidays <- us_holidays |>
mutate(date = as.Date(date)) |>
select(localName, date)
plot_raw_data(
AEP_hourly_cleaned,
x = "Datetime",
y = "AEP_MW",
color = "DuplicatedDate",
missing_value = "MissingValue",
file_name = "plots\\cleaned_AEP_MW.png"
)
write.csv("data\\AEP_hourly_cleaned.csv")
write.csv("data\\AEP_hourly_cleaned.csv")
write.csv(AEP_hourly_cleaned, "data\\AEP_hourly_cleaned.csv")
View(AEP_hourly)
View(AEP_hourly_cleaned)
AEP_hourly_cleaned <- AEP_hourly_cleaned |>
select(-Weekday, -Date, -localName, -So, -HolidayName)
View(AEP_hourly_cleaned)
write.csv(AEP_hourly_cleaned, "data\\AEP_hourly_cleaned.csv")
